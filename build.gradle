plugins {
    id "java-gradle-plugin"
    id "maven-publish"
    id "jacoco"
    id "com.gradle.plugin-publish" version "0.10.1"
    id 'org.ajoberstar.reckon' version "0.11.0"
    id "org.sonarqube" version "2.7.1"
    id "be.vbgn.ci-detect" version "0.1.2"
}
group "be.vbgn.gradle"

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    testImplementation gradleTestKit()
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

gradlePlugin {
    plugins {
        ciDetect {
            id = "be.vbgn.ci-detect"
            implementationClass = "be.vbgn.gradle.cidetect.CiDetectPlugin"
        }
    }
}

pluginBundle {
    vcsUrl = "https://github.com/vierbergenlars/ci-detect-gradle-plugin"
    website = vcsUrl
    description = "Plugin that checks if it is running on a continuous integration server and gives you access to the build metadata."
    tags = ["continuous-integration", "ci", "jenkins", "travis-ci", "gitlab-ci", "github-actions"]
    plugins {
        ciDetect {
            displayName = "CI detect plugin"
        }
    }
}

jacocoTestReport {
    dependsOn(test)
    reports {
        html.enabled = true
        xml.enabled = true
    }
}
check.dependsOn(jacocoTestReport)
tasks.sonarqube.dependsOn(check)

if (ci.isCi()) {
    sonarqube {
        properties {
            if (ci.isPullRequest()) {
                property "sonar.pullrequest.branch", ci.branch
                property "sonar.pullrequest.key", ci.pullRequest
                property "sonar.pullrequest.base", ci.pullRequestTargetBranch
            } else {
                property "sonar.branch.name", ci.branch
            }
        }
    }
}

reckon {
    scopeFromProp()
    snapshotFromProp()
}

reckonTagCreate.dependsOn(check)
